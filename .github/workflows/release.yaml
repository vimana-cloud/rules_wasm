name: Release
on:
  release:
    types: ['released']
permissions:
  # Necessary to upload a release asset:
  contents: write
jobs:
  upload-archive:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Upload Release Archive
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          REPO_NAME: ${{ github.event.repository.name }}
          RELEASE_TAG: ${{ github.ref_name }}
        run: |
          # Extract the version from `MODULE.bazel`
          # and make sure it matches the release tag.
          export MODULE_VERSION="$(bazel mod explain --output json '<root>' | jq --raw-output .version)"
          if [ "${RELEASE_TAG}" != "v${MODULE_VERSION}" ]
          then
            echo >&2 "ERROR: Release tag does not match the version in MODULE.bazel"
            exit 1
          fi

          # Add all Git-tracked files to a compressed TAR archive.
          # Use `--transform` to put them under a single parent directory inside the archive.
          # This structure seems to be conventional.
          export ASSET_NAME="${REPO_NAME}-${RELEASE_TAG}.tar.gz"
          export ROOT_DIRECTORY="${REPO_NAME}-${MODULE_VERSION}"
          git ls-tree -r --name-only HEAD | xargs tar --transform "s,^,${ROOT_DIRECTORY}/," -czf "${ASSET_NAME}"

          gh release upload "${RELEASE_TAG}" "${ASSET_NAME}"
  publish:
    needs: upload-archive  # Run jobs sequentially.
    uses: bazel-contrib/publish-to-bcr/.github/workflows/publish.yaml@v0.1.0
    with:
      tag_name: ${{ github.ref_name }}
      # GitHub repository which is a fork of the upstream where the Pull Request will be opened.
      registry_fork:  vimana-cloud/bazel-central-registry
      # See note on Attestation Support:
      # https://github.com/bazel-contrib/publish-to-bcr?tab=readme-ov-file#attesation-support
      attest: false
    # Specify permissions for that called workflow (not this calling workflow).
    permissions:
      contents: write
      # Necessary if `attest: true`.
      #id-token: write
      # Necessary if `attest: true`.
      #attestations: write
    secrets:
      # Necessary to push to the BCR fork, and to open a pull request against a registry.
      publish_token: ${{ secrets.BCR_PUBLISH_TOKEN }}
