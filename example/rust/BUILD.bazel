load("@rules_wasm//:rust.bzl", "rust_component")
load("@rules_wasm//:wasm.bzl", "wasm_plug")
load("//:wasm-test.bzl", "wasm_test")

# Allow tests to reference these rules.
package(default_visibility = ["//visibility:public"])

# Build a command using the standard `wasi:cli/run` interface.
rust_component(
    name = "command",
    srcs = ["command.rs"],
    wit = "@rules_wasm//wasip2:cli",
    world = "command",
)

# Build a simple component with a custom interface.
rust_component(
    name = "foo",
    srcs = ["foo.rs"],
    wit = "//:foo.wit",
    world = "the-world",
)

# Build a wrapper component to interact with `:foo` from a command.
rust_component(
    name = "foo-wrapper",
    srcs = ["foo-wrapper.rs"],
    wit = "//:foo-wrapper-wit",
    world = "foo-command",
)

# Plug `:foo` into `:foo-wrapper` to resolve the import
# and create a new component that implements the standard `wasi:cli/run` interface.
wasm_plug(
    name = "foo-wrapped",
    plug = ":foo",
    wrapper = ":foo-wrapper",
)

wasm_test(
    name = "wrapper-test",
    component = ":foo-wrapped",
)
